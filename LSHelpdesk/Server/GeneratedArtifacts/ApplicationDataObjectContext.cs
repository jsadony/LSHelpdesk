//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("LightSwitchApplication", "Action_Ticket", "Ticket", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.Ticket), "Action", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.Action), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "ClientUserMap_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.User), "ClientUserMap", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.ClientUserMap), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "ClientUserMap_Client", "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.Client), "ClientUserMap", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.ClientUserMap), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "Ticket_Client", "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.Client), "Ticket", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.Ticket), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "Ticket_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.User), "Ticket", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.Ticket), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "ProjectClientMap_Client", "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.Client), "ProjectClientMap", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.ProjectClientMap), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "ProjectClientMap_Project", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.Project), "ProjectClientMap", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.ProjectClientMap), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "Ticket_Project", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LightSwitchApplication.Implementation.Project), "Ticket", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LightSwitchApplication.Implementation.Ticket), true)]

#endregion

namespace LightSwitchApplication.Implementation
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ApplicationData : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ApplicationData object using the connection string found in the 'ApplicationData' section of the application configuration file.
        /// </summary>
        public ApplicationData() : base("name=ApplicationData", "ApplicationData")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ApplicationData object.
        /// </summary>
        public ApplicationData(string connectionString) : base(connectionString, "ApplicationData")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ApplicationData object.
        /// </summary>
        public ApplicationData(EntityConnection connection) : base(connection, "ApplicationData")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Ticket> Tickets
        {
            get
            {
                if ((_Tickets == null))
                {
                    _Tickets = base.CreateObjectSet<Ticket>("Tickets");
                }
                return _Tickets;
            }
        }
        private ObjectSet<Ticket> _Tickets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Action> Actions
        {
            get
            {
                if ((_Actions == null))
                {
                    _Actions = base.CreateObjectSet<Action>("Actions");
                }
                return _Actions;
            }
        }
        private ObjectSet<Action> _Actions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Client> Clients
        {
            get
            {
                if ((_Clients == null))
                {
                    _Clients = base.CreateObjectSet<Client>("Clients");
                }
                return _Clients;
            }
        }
        private ObjectSet<Client> _Clients;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ClientUserMap> ClientUserMaps
        {
            get
            {
                if ((_ClientUserMaps == null))
                {
                    _ClientUserMaps = base.CreateObjectSet<ClientUserMap>("ClientUserMaps");
                }
                return _ClientUserMaps;
            }
        }
        private ObjectSet<ClientUserMap> _ClientUserMaps;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Project> Projects
        {
            get
            {
                if ((_Projects == null))
                {
                    _Projects = base.CreateObjectSet<Project>("Projects");
                }
                return _Projects;
            }
        }
        private ObjectSet<Project> _Projects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectClientMap> ProjectClientMaps
        {
            get
            {
                if ((_ProjectClientMaps == null))
                {
                    _ProjectClientMaps = base.CreateObjectSet<ProjectClientMap>("ProjectClientMaps");
                }
                return _ProjectClientMaps;
            }
        }
        private ObjectSet<ProjectClientMap> _ProjectClientMaps;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tickets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTickets(Ticket ticket)
        {
            base.AddObject("Tickets", ticket);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Actions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActions(Action action)
        {
            base.AddObject("Actions", action);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Clients EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClients(Client client)
        {
            base.AddObject("Clients", client);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ClientUserMaps EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClientUserMaps(ClientUserMap clientUserMap)
        {
            base.AddObject("ClientUserMaps", clientUserMap);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Projects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjects(Project project)
        {
            base.AddObject("Projects", project);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectClientMaps EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectClientMaps(ProjectClientMap projectClientMap)
        {
            base.AddObject("ProjectClientMaps", projectClientMap);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Action")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Action : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Action object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="rowVersion">Initial value of the RowVersion property.</param>
        /// <param name="actionDate">Initial value of the ActionDate property.</param>
        /// <param name="actionText">Initial value of the ActionText property.</param>
        /// <param name="time">Initial value of the Time property.</param>
        /// <param name="action_Ticket">Initial value of the Action_Ticket property.</param>
        public static Action CreateAction(global::System.Int32 id, global::System.Byte[] rowVersion, global::System.DateTime actionDate, global::System.String actionText, global::System.Decimal time, global::System.Int32 action_Ticket)
        {
            Action action = new Action();
            action.Id = id;
            action.RowVersion = rowVersion;
            action.ActionDate = actionDate;
            action.ActionText = actionText;
            action.Time = time;
            action.Action_Ticket = action_Ticket;
            return action;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] RowVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_RowVersion);
            }
            set
            {
                OnRowVersionChanging(value);
                ReportPropertyChanging("RowVersion");
                _RowVersion = value;
                ReportPropertyChanged("RowVersion");
                OnRowVersionChanged();
            }
        }
        private global::System.Byte[] _RowVersion;
        partial void OnRowVersionChanging(global::System.Byte[] value);
        partial void OnRowVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ActionDate
        {
            get
            {
                return _ActionDate;
            }
            set
            {
                OnActionDateChanging(value);
                ReportPropertyChanging("ActionDate");
                _ActionDate = value;
                ReportPropertyChanged("ActionDate");
                OnActionDateChanged();
            }
        }
        private global::System.DateTime _ActionDate;
        partial void OnActionDateChanging(global::System.DateTime value);
        partial void OnActionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ActionText
        {
            get
            {
                return _ActionText;
            }
            set
            {
                OnActionTextChanging(value);
                ReportPropertyChanging("ActionText");
                _ActionText = value;
                ReportPropertyChanged("ActionText");
                OnActionTextChanged();
            }
        }
        private global::System.String _ActionText;
        partial void OnActionTextChanging(global::System.String value);
        partial void OnActionTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Time
        {
            get
            {
                return _Time;
            }
            set
            {
                OnTimeChanging(value);
                ReportPropertyChanging("Time");
                _Time = value;
                ReportPropertyChanged("Time");
                OnTimeChanged();
            }
        }
        private global::System.Decimal _Time;
        partial void OnTimeChanging(global::System.Decimal value);
        partial void OnTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Action_Ticket
        {
            get
            {
                return _Action_Ticket;
            }
            set
            {
                OnAction_TicketChanging(value);
                ReportPropertyChanging("Action_Ticket");
                _Action_Ticket = value;
                ReportPropertyChanged("Action_Ticket");
                OnAction_TicketChanged();
            }
        }
        private global::System.Int32 _Action_Ticket;
        partial void OnAction_TicketChanging(global::System.Int32 value);
        partial void OnAction_TicketChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "Action_Ticket", "Ticket")]
        public Ticket Ticket
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ticket>("LightSwitchApplication.Action_Ticket", "Ticket").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ticket>("LightSwitchApplication.Action_Ticket", "Ticket").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Ticket> TicketReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ticket>("LightSwitchApplication.Action_Ticket", "Ticket");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Ticket>("LightSwitchApplication.Action_Ticket", "Ticket", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Client")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Client : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Client object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="rowVersion">Initial value of the RowVersion property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Client CreateClient(global::System.Int32 id, global::System.Byte[] rowVersion, global::System.String name)
        {
            Client client = new Client();
            client.Id = id;
            client.RowVersion = rowVersion;
            client.Name = name;
            return client;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] RowVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_RowVersion);
            }
            set
            {
                OnRowVersionChanging(value);
                ReportPropertyChanging("RowVersion");
                _RowVersion = value;
                ReportPropertyChanged("RowVersion");
                OnRowVersionChanged();
            }
        }
        private global::System.Byte[] _RowVersion;
        partial void OnRowVersionChanging(global::System.Byte[] value);
        partial void OnRowVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsExternal
        {
            get
            {
                return _IsExternal;
            }
            set
            {
                OnIsExternalChanging(value);
                ReportPropertyChanging("IsExternal");
                _IsExternal = value;
                ReportPropertyChanged("IsExternal");
                OnIsExternalChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsExternal;
        partial void OnIsExternalChanging(Nullable<global::System.Boolean> value);
        partial void OnIsExternalChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "ClientUserMap_Client", "ClientUserMap")]
        public EntityCollection<ClientUserMap> ClientUserMaps
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClientUserMap>("LightSwitchApplication.ClientUserMap_Client", "ClientUserMap");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClientUserMap>("LightSwitchApplication.ClientUserMap_Client", "ClientUserMap", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "Ticket_Client", "Ticket")]
        public EntityCollection<Ticket> Tickets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Ticket>("LightSwitchApplication.Ticket_Client", "Ticket");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Ticket>("LightSwitchApplication.Ticket_Client", "Ticket", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "ProjectClientMap_Client", "ProjectClientMap")]
        public EntityCollection<ProjectClientMap> ProjectClientMaps
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectClientMap>("LightSwitchApplication.ProjectClientMap_Client", "ProjectClientMap");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectClientMap>("LightSwitchApplication.ProjectClientMap_Client", "ProjectClientMap", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="ClientUserMap")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ClientUserMap : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ClientUserMap object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="rowVersion">Initial value of the RowVersion property.</param>
        /// <param name="clientUserMap_User">Initial value of the ClientUserMap_User property.</param>
        /// <param name="clientUserMap_Client">Initial value of the ClientUserMap_Client property.</param>
        public static ClientUserMap CreateClientUserMap(global::System.Int32 id, global::System.Byte[] rowVersion, global::System.Int32 clientUserMap_User, global::System.Int32 clientUserMap_Client)
        {
            ClientUserMap clientUserMap = new ClientUserMap();
            clientUserMap.Id = id;
            clientUserMap.RowVersion = rowVersion;
            clientUserMap.ClientUserMap_User = clientUserMap_User;
            clientUserMap.ClientUserMap_Client = clientUserMap_Client;
            return clientUserMap;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] RowVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_RowVersion);
            }
            set
            {
                OnRowVersionChanging(value);
                ReportPropertyChanging("RowVersion");
                _RowVersion = value;
                ReportPropertyChanged("RowVersion");
                OnRowVersionChanged();
            }
        }
        private global::System.Byte[] _RowVersion;
        partial void OnRowVersionChanging(global::System.Byte[] value);
        partial void OnRowVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClientUserMap_User
        {
            get
            {
                return _ClientUserMap_User;
            }
            set
            {
                OnClientUserMap_UserChanging(value);
                ReportPropertyChanging("ClientUserMap_User");
                _ClientUserMap_User = value;
                ReportPropertyChanged("ClientUserMap_User");
                OnClientUserMap_UserChanged();
            }
        }
        private global::System.Int32 _ClientUserMap_User;
        partial void OnClientUserMap_UserChanging(global::System.Int32 value);
        partial void OnClientUserMap_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClientUserMap_Client
        {
            get
            {
                return _ClientUserMap_Client;
            }
            set
            {
                OnClientUserMap_ClientChanging(value);
                ReportPropertyChanging("ClientUserMap_Client");
                _ClientUserMap_Client = value;
                ReportPropertyChanged("ClientUserMap_Client");
                OnClientUserMap_ClientChanged();
            }
        }
        private global::System.Int32 _ClientUserMap_Client;
        partial void OnClientUserMap_ClientChanging(global::System.Int32 value);
        partial void OnClientUserMap_ClientChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "ClientUserMap_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LightSwitchApplication.ClientUserMap_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LightSwitchApplication.ClientUserMap_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LightSwitchApplication.ClientUserMap_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("LightSwitchApplication.ClientUserMap_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "ClientUserMap_Client", "Client")]
        public Client Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("LightSwitchApplication.ClientUserMap_Client", "Client").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("LightSwitchApplication.ClientUserMap_Client", "Client").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("LightSwitchApplication.ClientUserMap_Client", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("LightSwitchApplication.ClientUserMap_Client", "Client", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Project")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Project : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Project object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="rowVersion">Initial value of the RowVersion property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Project CreateProject(global::System.Int32 id, global::System.Byte[] rowVersion, global::System.String name)
        {
            Project project = new Project();
            project.Id = id;
            project.RowVersion = rowVersion;
            project.Name = name;
            return project;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] RowVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_RowVersion);
            }
            set
            {
                OnRowVersionChanging(value);
                ReportPropertyChanging("RowVersion");
                _RowVersion = value;
                ReportPropertyChanged("RowVersion");
                OnRowVersionChanged();
            }
        }
        private global::System.Byte[] _RowVersion;
        partial void OnRowVersionChanging(global::System.Byte[] value);
        partial void OnRowVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "ProjectClientMap_Project", "ProjectClientMap")]
        public EntityCollection<ProjectClientMap> ProjectClientMaps
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectClientMap>("LightSwitchApplication.ProjectClientMap_Project", "ProjectClientMap");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectClientMap>("LightSwitchApplication.ProjectClientMap_Project", "ProjectClientMap", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "Ticket_Project", "Ticket")]
        public EntityCollection<Ticket> Tickets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Ticket>("LightSwitchApplication.Ticket_Project", "Ticket");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Ticket>("LightSwitchApplication.Ticket_Project", "Ticket", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="ProjectClientMap")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectClientMap : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectClientMap object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="rowVersion">Initial value of the RowVersion property.</param>
        /// <param name="projectClientMap_Client">Initial value of the ProjectClientMap_Client property.</param>
        /// <param name="projectClientMap_Project">Initial value of the ProjectClientMap_Project property.</param>
        public static ProjectClientMap CreateProjectClientMap(global::System.Int32 id, global::System.Byte[] rowVersion, global::System.Int32 projectClientMap_Client, global::System.Int32 projectClientMap_Project)
        {
            ProjectClientMap projectClientMap = new ProjectClientMap();
            projectClientMap.Id = id;
            projectClientMap.RowVersion = rowVersion;
            projectClientMap.ProjectClientMap_Client = projectClientMap_Client;
            projectClientMap.ProjectClientMap_Project = projectClientMap_Project;
            return projectClientMap;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] RowVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_RowVersion);
            }
            set
            {
                OnRowVersionChanging(value);
                ReportPropertyChanging("RowVersion");
                _RowVersion = value;
                ReportPropertyChanged("RowVersion");
                OnRowVersionChanged();
            }
        }
        private global::System.Byte[] _RowVersion;
        partial void OnRowVersionChanging(global::System.Byte[] value);
        partial void OnRowVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectClientMap_Client
        {
            get
            {
                return _ProjectClientMap_Client;
            }
            set
            {
                OnProjectClientMap_ClientChanging(value);
                ReportPropertyChanging("ProjectClientMap_Client");
                _ProjectClientMap_Client = value;
                ReportPropertyChanged("ProjectClientMap_Client");
                OnProjectClientMap_ClientChanged();
            }
        }
        private global::System.Int32 _ProjectClientMap_Client;
        partial void OnProjectClientMap_ClientChanging(global::System.Int32 value);
        partial void OnProjectClientMap_ClientChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectClientMap_Project
        {
            get
            {
                return _ProjectClientMap_Project;
            }
            set
            {
                OnProjectClientMap_ProjectChanging(value);
                ReportPropertyChanging("ProjectClientMap_Project");
                _ProjectClientMap_Project = value;
                ReportPropertyChanged("ProjectClientMap_Project");
                OnProjectClientMap_ProjectChanged();
            }
        }
        private global::System.Int32 _ProjectClientMap_Project;
        partial void OnProjectClientMap_ProjectChanging(global::System.Int32 value);
        partial void OnProjectClientMap_ProjectChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "ProjectClientMap_Client", "Client")]
        public Client Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("LightSwitchApplication.ProjectClientMap_Client", "Client").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("LightSwitchApplication.ProjectClientMap_Client", "Client").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("LightSwitchApplication.ProjectClientMap_Client", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("LightSwitchApplication.ProjectClientMap_Client", "Client", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "ProjectClientMap_Project", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("LightSwitchApplication.ProjectClientMap_Project", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("LightSwitchApplication.ProjectClientMap_Project", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("LightSwitchApplication.ProjectClientMap_Project", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("LightSwitchApplication.ProjectClientMap_Project", "Project", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Ticket")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Ticket : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Ticket object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="rowVersion">Initial value of the RowVersion property.</param>
        /// <param name="shortDescription">Initial value of the ShortDescription property.</param>
        /// <param name="dateOpened">Initial value of the DateOpened property.</param>
        /// <param name="ticket_Client">Initial value of the Ticket_Client property.</param>
        /// <param name="ticket_User">Initial value of the Ticket_User property.</param>
        /// <param name="ticket_Project">Initial value of the Ticket_Project property.</param>
        public static Ticket CreateTicket(global::System.Int32 id, global::System.Byte[] rowVersion, global::System.String shortDescription, global::System.DateTime dateOpened, global::System.Int32 ticket_Client, global::System.Int32 ticket_User, global::System.Int32 ticket_Project)
        {
            Ticket ticket = new Ticket();
            ticket.Id = id;
            ticket.RowVersion = rowVersion;
            ticket.ShortDescription = shortDescription;
            ticket.DateOpened = dateOpened;
            ticket.Ticket_Client = ticket_Client;
            ticket.Ticket_User = ticket_User;
            ticket.Ticket_Project = ticket_Project;
            return ticket;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] RowVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_RowVersion);
            }
            set
            {
                OnRowVersionChanging(value);
                ReportPropertyChanging("RowVersion");
                _RowVersion = value;
                ReportPropertyChanged("RowVersion");
                OnRowVersionChanged();
            }
        }
        private global::System.Byte[] _RowVersion;
        partial void OnRowVersionChanging(global::System.Byte[] value);
        partial void OnRowVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ShortDescription
        {
            get
            {
                return _ShortDescription;
            }
            set
            {
                OnShortDescriptionChanging(value);
                ReportPropertyChanging("ShortDescription");
                _ShortDescription = value;
                ReportPropertyChanged("ShortDescription");
                OnShortDescriptionChanged();
            }
        }
        private global::System.String _ShortDescription;
        partial void OnShortDescriptionChanging(global::System.String value);
        partial void OnShortDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = value;
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateOpened
        {
            get
            {
                return _DateOpened;
            }
            set
            {
                OnDateOpenedChanging(value);
                ReportPropertyChanging("DateOpened");
                _DateOpened = value;
                ReportPropertyChanged("DateOpened");
                OnDateOpenedChanged();
            }
        }
        private global::System.DateTime _DateOpened;
        partial void OnDateOpenedChanging(global::System.DateTime value);
        partial void OnDateOpenedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateClosed
        {
            get
            {
                return _DateClosed;
            }
            set
            {
                OnDateClosedChanging(value);
                ReportPropertyChanging("DateClosed");
                _DateClosed = value;
                ReportPropertyChanged("DateClosed");
                OnDateClosedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateClosed;
        partial void OnDateClosedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateClosedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Ticket_Client
        {
            get
            {
                return _Ticket_Client;
            }
            set
            {
                OnTicket_ClientChanging(value);
                ReportPropertyChanging("Ticket_Client");
                _Ticket_Client = value;
                ReportPropertyChanged("Ticket_Client");
                OnTicket_ClientChanged();
            }
        }
        private global::System.Int32 _Ticket_Client;
        partial void OnTicket_ClientChanging(global::System.Int32 value);
        partial void OnTicket_ClientChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Ticket_User
        {
            get
            {
                return _Ticket_User;
            }
            set
            {
                OnTicket_UserChanging(value);
                ReportPropertyChanging("Ticket_User");
                _Ticket_User = value;
                ReportPropertyChanged("Ticket_User");
                OnTicket_UserChanged();
            }
        }
        private global::System.Int32 _Ticket_User;
        partial void OnTicket_UserChanging(global::System.Int32 value);
        partial void OnTicket_UserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Ticket_Project
        {
            get
            {
                return _Ticket_Project;
            }
            set
            {
                OnTicket_ProjectChanging(value);
                ReportPropertyChanging("Ticket_Project");
                _Ticket_Project = value;
                ReportPropertyChanged("Ticket_Project");
                OnTicket_ProjectChanged();
            }
        }
        private global::System.Int32 _Ticket_Project;
        partial void OnTicket_ProjectChanging(global::System.Int32 value);
        partial void OnTicket_ProjectChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "Action_Ticket", "Action")]
        public EntityCollection<Action> Actions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Action>("LightSwitchApplication.Action_Ticket", "Action");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Action>("LightSwitchApplication.Action_Ticket", "Action", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "Ticket_Client", "Client")]
        public Client Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("LightSwitchApplication.Ticket_Client", "Client").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("LightSwitchApplication.Ticket_Client", "Client").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("LightSwitchApplication.Ticket_Client", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("LightSwitchApplication.Ticket_Client", "Client", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "Ticket_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LightSwitchApplication.Ticket_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LightSwitchApplication.Ticket_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("LightSwitchApplication.Ticket_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("LightSwitchApplication.Ticket_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "Ticket_Project", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("LightSwitchApplication.Ticket_Project", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("LightSwitchApplication.Ticket_Project", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("LightSwitchApplication.Ticket_Project", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("LightSwitchApplication.Ticket_Project", "Project", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="rowVersion">Initial value of the RowVersion property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.Byte[] rowVersion, global::System.String firstName)
        {
            User user = new User();
            user.Id = id;
            user.RowVersion = rowVersion;
            user.FirstName = firstName;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = value;
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] RowVersion
        {
            get
            {
                return StructuralObject.GetValidValue(_RowVersion);
            }
            set
            {
                OnRowVersionChanging(value);
                ReportPropertyChanging("RowVersion");
                _RowVersion = value;
                ReportPropertyChanged("RowVersion");
                OnRowVersionChanged();
            }
        }
        private global::System.Byte[] _RowVersion;
        partial void OnRowVersionChanging(global::System.Byte[] value);
        partial void OnRowVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = value;
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = value;
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MiddleName
        {
            get
            {
                return _MiddleName;
            }
            set
            {
                OnMiddleNameChanging(value);
                ReportPropertyChanging("MiddleName");
                _MiddleName = value;
                ReportPropertyChanged("MiddleName");
                OnMiddleNameChanged();
            }
        }
        private global::System.String _MiddleName;
        partial void OnMiddleNameChanging(global::System.String value);
        partial void OnMiddleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ADUserName
        {
            get
            {
                return _ADUserName;
            }
            set
            {
                OnADUserNameChanging(value);
                ReportPropertyChanging("ADUserName");
                _ADUserName = value;
                ReportPropertyChanged("ADUserName");
                OnADUserNameChanged();
            }
        }
        private global::System.String _ADUserName;
        partial void OnADUserNameChanging(global::System.String value);
        partial void OnADUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ADsid
        {
            get
            {
                return _ADsid;
            }
            set
            {
                OnADsidChanging(value);
                ReportPropertyChanging("ADsid");
                _ADsid = value;
                ReportPropertyChanged("ADsid");
                OnADsidChanged();
            }
        }
        private global::System.String _ADsid;
        partial void OnADsidChanging(global::System.String value);
        partial void OnADsidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = value;
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsAD
        {
            get
            {
                return _IsAD;
            }
            set
            {
                OnIsADChanging(value);
                ReportPropertyChanging("IsAD");
                _IsAD = value;
                ReportPropertyChanged("IsAD");
                OnIsADChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsAD;
        partial void OnIsADChanging(Nullable<global::System.Boolean> value);
        partial void OnIsADChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsTech
        {
            get
            {
                return _IsTech;
            }
            set
            {
                OnIsTechChanging(value);
                ReportPropertyChanging("IsTech");
                _IsTech = value;
                ReportPropertyChanged("IsTech");
                OnIsTechChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsTech;
        partial void OnIsTechChanging(Nullable<global::System.Boolean> value);
        partial void OnIsTechChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsQueue
        {
            get
            {
                return _IsQueue;
            }
            set
            {
                OnIsQueueChanging(value);
                ReportPropertyChanging("IsQueue");
                _IsQueue = value;
                ReportPropertyChanged("IsQueue");
                OnIsQueueChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsQueue;
        partial void OnIsQueueChanging(Nullable<global::System.Boolean> value);
        partial void OnIsQueueChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "ClientUserMap_User", "ClientUserMap")]
        public EntityCollection<ClientUserMap> ClientUserMaps
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClientUserMap>("LightSwitchApplication.ClientUserMap_User", "ClientUserMap");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClientUserMap>("LightSwitchApplication.ClientUserMap_User", "ClientUserMap", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "Ticket_User", "Ticket")]
        public EntityCollection<Ticket> Tickets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Ticket>("LightSwitchApplication.Ticket_User", "Ticket");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Ticket>("LightSwitchApplication.Ticket_User", "Ticket", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
