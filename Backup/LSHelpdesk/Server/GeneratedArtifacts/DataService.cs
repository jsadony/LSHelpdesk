//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Data Services
    
    /// <summary>
    /// Provides members to query and update data in the ApplicationData datasource.
    /// </summary>
    public sealed partial class ApplicationDataService
        : global::LightSwitchApplication.ApplicationData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ApplicationDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tickets_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tickets_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tickets_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tickets_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tickets_Inserting(global::LightSwitchApplication.Ticket entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tickets_Inserted(global::LightSwitchApplication.Ticket entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tickets_Updating(global::LightSwitchApplication.Ticket entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tickets_Updated(global::LightSwitchApplication.Ticket entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tickets_Deleting(global::LightSwitchApplication.Ticket entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tickets_Deleted(global::LightSwitchApplication.Ticket entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tickets_Validate(global::LightSwitchApplication.Ticket entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tickets_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Ticket, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Actions_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Actions_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Actions_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Actions_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Actions_Inserting(global::LightSwitchApplication.Action entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Actions_Inserted(global::LightSwitchApplication.Action entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Actions_Updating(global::LightSwitchApplication.Action entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Actions_Updated(global::LightSwitchApplication.Action entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Actions_Deleting(global::LightSwitchApplication.Action entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Actions_Deleted(global::LightSwitchApplication.Action entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Actions_Validate(global::LightSwitchApplication.Action entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Actions_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Action, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_Inserting(global::LightSwitchApplication.Client entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_Inserted(global::LightSwitchApplication.Client entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_Updating(global::LightSwitchApplication.Client entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_Updated(global::LightSwitchApplication.Client entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_Deleting(global::LightSwitchApplication.Client entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_Deleted(global::LightSwitchApplication.Client entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_Validate(global::LightSwitchApplication.Client entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Client, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Inserting(global::LightSwitchApplication.User entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Inserted(global::LightSwitchApplication.User entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Updating(global::LightSwitchApplication.User entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Updated(global::LightSwitchApplication.User entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Deleting(global::LightSwitchApplication.User entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Deleted(global::LightSwitchApplication.User entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Validate(global::LightSwitchApplication.User entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.User, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientUserMaps_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientUserMaps_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientUserMaps_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientUserMaps_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientUserMaps_Inserting(global::LightSwitchApplication.ClientUserMap entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientUserMaps_Inserted(global::LightSwitchApplication.ClientUserMap entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientUserMaps_Updating(global::LightSwitchApplication.ClientUserMap entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientUserMaps_Updated(global::LightSwitchApplication.ClientUserMap entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientUserMaps_Deleting(global::LightSwitchApplication.ClientUserMap entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientUserMaps_Deleted(global::LightSwitchApplication.ClientUserMap entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientUserMaps_Validate(global::LightSwitchApplication.ClientUserMap entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientUserMaps_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ClientUserMap, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Inserting(global::LightSwitchApplication.Project entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Inserted(global::LightSwitchApplication.Project entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Updating(global::LightSwitchApplication.Project entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Updated(global::LightSwitchApplication.Project entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Deleting(global::LightSwitchApplication.Project entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Deleted(global::LightSwitchApplication.Project entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Validate(global::LightSwitchApplication.Project entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Project, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectClientMaps_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectClientMaps_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectClientMaps_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectClientMaps_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectClientMaps_Inserting(global::LightSwitchApplication.ProjectClientMap entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectClientMaps_Inserted(global::LightSwitchApplication.ProjectClientMap entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectClientMaps_Updating(global::LightSwitchApplication.ProjectClientMap entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectClientMaps_Updated(global::LightSwitchApplication.ProjectClientMap entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectClientMaps_Deleting(global::LightSwitchApplication.ProjectClientMap entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectClientMaps_Deleted(global::LightSwitchApplication.ProjectClientMap entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectClientMaps_Validate(global::LightSwitchApplication.ProjectClientMap entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectClientMaps_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProjectClientMap, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executing(global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executed(global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_ExecuteFailed(global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Ticket>
                __TicketsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Ticket>(
                    "Tickets",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Tickets_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Tickets_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Tickets_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Tickets_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Tickets_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Tickets_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Tickets_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Tickets_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Tickets_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Tickets_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Tickets_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Tickets_Filter);
            private static bool __Tickets_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Tickets_CanInsert(ref result);
                return result;
            }
            private static bool __Tickets_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Tickets_CanUpdate(ref result);
                return result;
            }
            private static bool __Tickets_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Tickets_CanDelete(ref result);
                return result;
            }
            private static bool __Tickets_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Tickets_CanRead(ref result);
                return result;
            }
            private static void __Tickets_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Ticket e)
            {
                d.Tickets_Inserting(e);
            }
            private static void __Tickets_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Ticket e)
            {
                d.Tickets_Inserted(e);
            }
            private static void __Tickets_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Ticket e)
            {
                d.Tickets_Updating(e);
            }
            private static void __Tickets_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Ticket e)
            {
                d.Tickets_Updated(e);
            }
            private static void __Tickets_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Ticket e)
            {
                d.Tickets_Deleting(e);
            }
            private static void __Tickets_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Ticket e)
            {
                d.Tickets_Deleted(e);
            }
            private static void __Tickets_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Ticket e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Tickets_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Ticket, bool>> __Tickets_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Ticket, bool>> filter = null;
                d.Tickets_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Action>
                __ActionsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Action>(
                    "Actions",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Actions_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Actions_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Actions_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Actions_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Actions_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Actions_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Actions_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Actions_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Actions_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Actions_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Actions_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Actions_Filter);
            private static bool __Actions_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Actions_CanInsert(ref result);
                return result;
            }
            private static bool __Actions_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Actions_CanUpdate(ref result);
                return result;
            }
            private static bool __Actions_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Actions_CanDelete(ref result);
                return result;
            }
            private static bool __Actions_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Actions_CanRead(ref result);
                return result;
            }
            private static void __Actions_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Action e)
            {
                d.Actions_Inserting(e);
            }
            private static void __Actions_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Action e)
            {
                d.Actions_Inserted(e);
            }
            private static void __Actions_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Action e)
            {
                d.Actions_Updating(e);
            }
            private static void __Actions_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Action e)
            {
                d.Actions_Updated(e);
            }
            private static void __Actions_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Action e)
            {
                d.Actions_Deleting(e);
            }
            private static void __Actions_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Action e)
            {
                d.Actions_Deleted(e);
            }
            private static void __Actions_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Action e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Actions_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Action, bool>> __Actions_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Action, bool>> filter = null;
                d.Actions_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Client>
                __ClientsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Client>(
                    "Clients",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_Filter);
            private static bool __Clients_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Clients_CanInsert(ref result);
                return result;
            }
            private static bool __Clients_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Clients_CanUpdate(ref result);
                return result;
            }
            private static bool __Clients_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Clients_CanDelete(ref result);
                return result;
            }
            private static bool __Clients_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Clients_CanRead(ref result);
                return result;
            }
            private static void __Clients_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Client e)
            {
                d.Clients_Inserting(e);
            }
            private static void __Clients_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Client e)
            {
                d.Clients_Inserted(e);
            }
            private static void __Clients_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Client e)
            {
                d.Clients_Updating(e);
            }
            private static void __Clients_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Client e)
            {
                d.Clients_Updated(e);
            }
            private static void __Clients_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Client e)
            {
                d.Clients_Deleting(e);
            }
            private static void __Clients_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Client e)
            {
                d.Clients_Deleted(e);
            }
            private static void __Clients_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Client e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Clients_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Client, bool>> __Clients_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Client, bool>> filter = null;
                d.Clients_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.User>
                __UsersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.User>(
                    "Users",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_Filter);
            private static bool __Users_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Users_CanInsert(ref result);
                return result;
            }
            private static bool __Users_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Users_CanUpdate(ref result);
                return result;
            }
            private static bool __Users_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Users_CanDelete(ref result);
                return result;
            }
            private static bool __Users_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Users_CanRead(ref result);
                return result;
            }
            private static void __Users_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.User e)
            {
                d.Users_Inserting(e);
            }
            private static void __Users_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.User e)
            {
                d.Users_Inserted(e);
            }
            private static void __Users_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.User e)
            {
                d.Users_Updating(e);
            }
            private static void __Users_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.User e)
            {
                d.Users_Updated(e);
            }
            private static void __Users_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.User e)
            {
                d.Users_Deleting(e);
            }
            private static void __Users_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.User e)
            {
                d.Users_Deleted(e);
            }
            private static void __Users_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.User e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Users_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.User, bool>> __Users_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.User, bool>> filter = null;
                d.Users_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ClientUserMap>
                __ClientUserMapsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ClientUserMap>(
                    "ClientUserMaps",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ClientUserMaps_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ClientUserMaps_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ClientUserMaps_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ClientUserMaps_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ClientUserMaps_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ClientUserMaps_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ClientUserMaps_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ClientUserMaps_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ClientUserMaps_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ClientUserMaps_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ClientUserMaps_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ClientUserMaps_Filter);
            private static bool __ClientUserMaps_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ClientUserMaps_CanInsert(ref result);
                return result;
            }
            private static bool __ClientUserMaps_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ClientUserMaps_CanUpdate(ref result);
                return result;
            }
            private static bool __ClientUserMaps_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ClientUserMaps_CanDelete(ref result);
                return result;
            }
            private static bool __ClientUserMaps_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ClientUserMaps_CanRead(ref result);
                return result;
            }
            private static void __ClientUserMaps_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ClientUserMap e)
            {
                d.ClientUserMaps_Inserting(e);
            }
            private static void __ClientUserMaps_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ClientUserMap e)
            {
                d.ClientUserMaps_Inserted(e);
            }
            private static void __ClientUserMaps_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ClientUserMap e)
            {
                d.ClientUserMaps_Updating(e);
            }
            private static void __ClientUserMaps_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ClientUserMap e)
            {
                d.ClientUserMaps_Updated(e);
            }
            private static void __ClientUserMaps_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ClientUserMap e)
            {
                d.ClientUserMaps_Deleting(e);
            }
            private static void __ClientUserMaps_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ClientUserMap e)
            {
                d.ClientUserMaps_Deleted(e);
            }
            private static void __ClientUserMaps_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ClientUserMap e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ClientUserMaps_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ClientUserMap, bool>> __ClientUserMaps_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ClientUserMap, bool>> filter = null;
                d.ClientUserMaps_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Project>
                __ProjectsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Project>(
                    "Projects",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Projects_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Projects_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Projects_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Projects_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Projects_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Projects_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Projects_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Projects_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Projects_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Projects_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Projects_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Projects_Filter);
            private static bool __Projects_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Projects_CanInsert(ref result);
                return result;
            }
            private static bool __Projects_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Projects_CanUpdate(ref result);
                return result;
            }
            private static bool __Projects_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Projects_CanDelete(ref result);
                return result;
            }
            private static bool __Projects_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Projects_CanRead(ref result);
                return result;
            }
            private static void __Projects_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Project e)
            {
                d.Projects_Inserting(e);
            }
            private static void __Projects_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Project e)
            {
                d.Projects_Inserted(e);
            }
            private static void __Projects_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Project e)
            {
                d.Projects_Updating(e);
            }
            private static void __Projects_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Project e)
            {
                d.Projects_Updated(e);
            }
            private static void __Projects_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Project e)
            {
                d.Projects_Deleting(e);
            }
            private static void __Projects_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Project e)
            {
                d.Projects_Deleted(e);
            }
            private static void __Projects_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Project e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Projects_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Project, bool>> __Projects_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Project, bool>> filter = null;
                d.Projects_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProjectClientMap>
                __ProjectClientMapsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProjectClientMap>(
                    "ProjectClientMaps",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectClientMaps_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectClientMaps_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectClientMaps_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectClientMaps_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectClientMaps_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectClientMaps_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectClientMaps_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectClientMaps_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectClientMaps_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectClientMaps_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectClientMaps_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectClientMaps_Filter);
            private static bool __ProjectClientMaps_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectClientMaps_CanInsert(ref result);
                return result;
            }
            private static bool __ProjectClientMaps_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectClientMaps_CanUpdate(ref result);
                return result;
            }
            private static bool __ProjectClientMaps_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectClientMaps_CanDelete(ref result);
                return result;
            }
            private static bool __ProjectClientMaps_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectClientMaps_CanRead(ref result);
                return result;
            }
            private static void __ProjectClientMaps_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectClientMap e)
            {
                d.ProjectClientMaps_Inserting(e);
            }
            private static void __ProjectClientMaps_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectClientMap e)
            {
                d.ProjectClientMaps_Inserted(e);
            }
            private static void __ProjectClientMaps_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectClientMap e)
            {
                d.ProjectClientMaps_Updating(e);
            }
            private static void __ProjectClientMaps_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectClientMap e)
            {
                d.ProjectClientMaps_Updated(e);
            }
            private static void __ProjectClientMaps_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectClientMap e)
            {
                d.ProjectClientMaps_Deleting(e);
            }
            private static void __ProjectClientMaps_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectClientMap e)
            {
                d.ProjectClientMaps_Deleted(e);
            }
            private static void __ProjectClientMaps_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectClientMap e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ProjectClientMaps_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProjectClientMap, bool>> __ProjectClientMaps_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProjectClientMap, bool>> filter = null;
                d.ProjectClientMaps_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>
                ___QueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>(
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Failed);
            private static void __Query_Executing(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor)
            {
                d.Query_Executing(queryDescriptor);
            }
            private static void __Query_Executed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor)
            {
                d.Query_Executed(queryDescriptor);
            }
            private static void __Query_Failed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor)
            {
                d.Query_ExecuteFailed(queryDescriptor);
            }
        }
    
        #endregion
    }
    
    #endregion
}
