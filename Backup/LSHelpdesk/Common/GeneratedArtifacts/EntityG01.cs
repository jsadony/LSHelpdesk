

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class Ticket : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Ticket entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Ticket()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Ticket(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Ticket> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Ticket.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Ticket_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Ticket_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.Ticket.DetailsClass.GetValue(this, global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.Ticket.DetailsClass.SetValue(this, global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.Ticket.DetailsClass.GetValue(this, global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.Ticket.DetailsClass.SetValue(this, global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ShortDescription
        {
            get
            {
                return global::LightSwitchApplication.Ticket.DetailsClass.GetValue(this, global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties.ShortDescription);
            }
            set
            {
                global::LightSwitchApplication.Ticket.DetailsClass.SetValue(this, global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties.ShortDescription, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShortDescription_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShortDescription_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShortDescription_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Description
        {
            get
            {
                return global::LightSwitchApplication.Ticket.DetailsClass.GetValue(this, global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties.Description);
            }
            set
            {
                global::LightSwitchApplication.Ticket.DetailsClass.SetValue(this, global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties.Description, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime DateOpened
        {
            get
            {
                return global::LightSwitchApplication.Ticket.DetailsClass.GetValue(this, global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties.DateOpened);
            }
            set
            {
                global::LightSwitchApplication.Ticket.DetailsClass.SetValue(this, global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties.DateOpened, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateOpened_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateOpened_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateOpened_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> DateClosed
        {
            get
            {
                return global::LightSwitchApplication.Ticket.DetailsClass.GetValue(this, global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties.DateClosed);
            }
            set
            {
                global::LightSwitchApplication.Ticket.DetailsClass.SetValue(this, global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties.DateClosed, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateClosed_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateClosed_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateClosed_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Action> Actions
        {
            get
            {
                return global::LightSwitchApplication.Ticket.DetailsClass.GetValue(this, global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties.Actions);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Action> ActionsQuery
        {
            get
            {
                return global::LightSwitchApplication.Ticket.DetailsClass.GetQuery(this, global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties.Actions);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Client Client
        {
            get
            {
                return global::LightSwitchApplication.Ticket.DetailsClass.GetValue(this, global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties.Client);
            }
            set
            {
                global::LightSwitchApplication.Ticket.DetailsClass.SetValue(this, global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties.Client, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Client_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Client_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Client_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.User User
        {
            get
            {
                return global::LightSwitchApplication.Ticket.DetailsClass.GetValue(this, global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties.User);
            }
            set
            {
                global::LightSwitchApplication.Ticket.DetailsClass.SetValue(this, global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties.User, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void User_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void User_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void User_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Project Project
        {
            get
            {
                return global::LightSwitchApplication.Ticket.DetailsClass.GetValue(this, global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties.Project);
            }
            set
            {
                global::LightSwitchApplication.Ticket.DetailsClass.SetValue(this, global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties.Project, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Project_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Project_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Project_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Ticket,
                global::LightSwitchApplication.Ticket.DetailsClass,
                global::LightSwitchApplication.Ticket.DetailsClass.IImplementation,
                global::LightSwitchApplication.Ticket.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass>.Entry
                __TicketEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass>.Entry(
                    global::LightSwitchApplication.Ticket.DetailsClass.__Ticket_CreateNew,
                    global::LightSwitchApplication.Ticket.DetailsClass.__Ticket_Created,
                    global::LightSwitchApplication.Ticket.DetailsClass.__Ticket_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Ticket __Ticket_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Ticket> es)
            {
                return new global::LightSwitchApplication.Ticket(es);
            }
            private static void __Ticket_Created(global::LightSwitchApplication.Ticket e)
            {
                e.Ticket_Created();
            }
            private static bool __Ticket_AllowSaveWithErrors(global::LightSwitchApplication.Ticket e)
            {
                bool result = false;
                e.Ticket_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Ticket.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, string> ShortDescription
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties.ShortDescription) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, string> Description
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties.Description) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, global::System.DateTime> DateOpened
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties.DateOpened) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, global::System.Nullable<global::System.DateTime>> DateClosed
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties.DateClosed) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, global::LightSwitchApplication.Action> Actions
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties.Actions) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, global::LightSwitchApplication.Action>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, global::LightSwitchApplication.Client> Client
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties.Client) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, global::LightSwitchApplication.Client>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, global::LightSwitchApplication.User> User
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties.User) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, global::LightSwitchApplication.User>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, global::LightSwitchApplication.Project> Project
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties.Project) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, global::LightSwitchApplication.Project>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new byte[] RowVersion { get; set; }
                new string ShortDescription { get; set; }
                new string Description { get; set; }
                new global::System.DateTime DateOpened { get; set; }
                new global::System.Nullable<global::System.DateTime> DateClosed { get; set; }
                new global::System.Collections.IEnumerable Actions { get; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Client { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation User { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Project { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Ticket.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, int>.Data> c, global::LightSwitchApplication.Ticket.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.Ticket e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.Ticket e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.Ticket.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.Ticket.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.Ticket e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Ticket.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.Ticket.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.Ticket e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.Ticket e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.Ticket.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.Ticket.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.Ticket e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, string>.Entry
                    ShortDescription = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, string>.Entry(
                        "ShortDescription",
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._ShortDescription_Stub,
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._ShortDescription_ComputeIsReadOnly,
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._ShortDescription_Validate,
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._ShortDescription_GetImplementationValue,
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._ShortDescription_SetImplementationValue,
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._ShortDescription_OnValueChanged);
                private static void _ShortDescription_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Ticket.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, string>.Data> c, global::LightSwitchApplication.Ticket.DetailsClass d, object sf)
                {
                    c(d, ref d._ShortDescription, sf);
                }
                private static bool _ShortDescription_ComputeIsReadOnly(global::LightSwitchApplication.Ticket e)
                {
                    bool result = false;
                    e.ShortDescription_IsReadOnly(ref result);
                    return result;
                }
                private static void _ShortDescription_Validate(global::LightSwitchApplication.Ticket e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ShortDescription_Validate(r);
                }
                private static string _ShortDescription_GetImplementationValue(global::LightSwitchApplication.Ticket.DetailsClass d)
                {
                    return d.ImplementationEntity.ShortDescription;
                }
                private static void _ShortDescription_SetImplementationValue(global::LightSwitchApplication.Ticket.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ShortDescription = v;
                }
                private static void _ShortDescription_OnValueChanged(global::LightSwitchApplication.Ticket e)
                {
                    e.ShortDescription_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, string>.Entry
                    Description = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, string>.Entry(
                        "Description",
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._Description_Stub,
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._Description_ComputeIsReadOnly,
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._Description_Validate,
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._Description_GetImplementationValue,
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._Description_SetImplementationValue,
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._Description_OnValueChanged);
                private static void _Description_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Ticket.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, string>.Data> c, global::LightSwitchApplication.Ticket.DetailsClass d, object sf)
                {
                    c(d, ref d._Description, sf);
                }
                private static bool _Description_ComputeIsReadOnly(global::LightSwitchApplication.Ticket e)
                {
                    bool result = false;
                    e.Description_IsReadOnly(ref result);
                    return result;
                }
                private static void _Description_Validate(global::LightSwitchApplication.Ticket e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Description_Validate(r);
                }
                private static string _Description_GetImplementationValue(global::LightSwitchApplication.Ticket.DetailsClass d)
                {
                    return d.ImplementationEntity.Description;
                }
                private static void _Description_SetImplementationValue(global::LightSwitchApplication.Ticket.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Description = v;
                }
                private static void _Description_OnValueChanged(global::LightSwitchApplication.Ticket e)
                {
                    e.Description_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, global::System.DateTime>.Entry
                    DateOpened = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, global::System.DateTime>.Entry(
                        "DateOpened",
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._DateOpened_Stub,
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._DateOpened_ComputeIsReadOnly,
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._DateOpened_Validate,
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._DateOpened_GetImplementationValue,
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._DateOpened_SetImplementationValue,
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._DateOpened_OnValueChanged);
                private static void _DateOpened_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Ticket.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.Ticket.DetailsClass d, object sf)
                {
                    c(d, ref d._DateOpened, sf);
                }
                private static bool _DateOpened_ComputeIsReadOnly(global::LightSwitchApplication.Ticket e)
                {
                    bool result = false;
                    e.DateOpened_IsReadOnly(ref result);
                    return result;
                }
                private static void _DateOpened_Validate(global::LightSwitchApplication.Ticket e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DateOpened_Validate(r);
                }
                private static global::System.DateTime _DateOpened_GetImplementationValue(global::LightSwitchApplication.Ticket.DetailsClass d)
                {
                    return d.ImplementationEntity.DateOpened;
                }
                private static void _DateOpened_SetImplementationValue(global::LightSwitchApplication.Ticket.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.DateOpened = global::LightSwitchApplication.Ticket.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _DateOpened_OnValueChanged(global::LightSwitchApplication.Ticket e)
                {
                    e.DateOpened_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    DateClosed = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "DateClosed",
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._DateClosed_Stub,
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._DateClosed_ComputeIsReadOnly,
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._DateClosed_Validate,
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._DateClosed_GetImplementationValue,
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._DateClosed_SetImplementationValue,
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._DateClosed_OnValueChanged);
                private static void _DateClosed_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Ticket.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.Ticket.DetailsClass d, object sf)
                {
                    c(d, ref d._DateClosed, sf);
                }
                private static bool _DateClosed_ComputeIsReadOnly(global::LightSwitchApplication.Ticket e)
                {
                    bool result = false;
                    e.DateClosed_IsReadOnly(ref result);
                    return result;
                }
                private static void _DateClosed_Validate(global::LightSwitchApplication.Ticket e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DateClosed_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _DateClosed_GetImplementationValue(global::LightSwitchApplication.Ticket.DetailsClass d)
                {
                    return d.ImplementationEntity.DateClosed;
                }
                private static void _DateClosed_SetImplementationValue(global::LightSwitchApplication.Ticket.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.DateClosed = global::LightSwitchApplication.Ticket.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _DateClosed_OnValueChanged(global::LightSwitchApplication.Ticket e)
                {
                    e.DateClosed_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, global::LightSwitchApplication.Action>.Entry
                    Actions = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, global::LightSwitchApplication.Action>.Entry(
                        "Actions",
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._Actions_Stub,
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._Actions_GetReferencedEntities,
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._Actions_GetEntityCollection);
                private static void _Actions_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Ticket.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, global::LightSwitchApplication.Action>.Data> c, global::LightSwitchApplication.Ticket.DetailsClass d, object sf)
                {
                    c(d, ref d._Actions, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Action> _Actions_GetReferencedEntities(global::LightSwitchApplication.Ticket.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Action, global::LightSwitchApplication.Action.DetailsClass>(global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties.Actions, ref d._Actions);
                }
                private static global::System.Collections.IEnumerable _Actions_GetEntityCollection(global::LightSwitchApplication.Ticket.DetailsClass d)
                {
                    return d.ImplementationEntity.Actions;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, global::LightSwitchApplication.Client>.Entry
                    Client = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, global::LightSwitchApplication.Client>.Entry(
                        "Client",
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._Client_Stub,
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._Client_ComputeIsReadOnly,
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._Client_Validate,
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._Client_GetCoreImplementationValue,
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._Client_GetImplementationValue,
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._Client_SetImplementationValue,
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._Client_Refresh,
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._Client_OnValueChanged);
                private static void _Client_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Ticket.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, global::LightSwitchApplication.Client>.Data> c, global::LightSwitchApplication.Ticket.DetailsClass d, object sf)
                {
                    c(d, ref d._Client, sf);
                }
                private static bool _Client_ComputeIsReadOnly(global::LightSwitchApplication.Ticket e)
                {
                    bool result = false;
                    e.Client_IsReadOnly(ref result);
                    return result;
                }
                private static void _Client_Validate(global::LightSwitchApplication.Ticket e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Client_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Client_GetCoreImplementationValue(global::LightSwitchApplication.Ticket.DetailsClass d)
                {
                    return d.ImplementationEntity.Client;
                }
                private static global::LightSwitchApplication.Client _Client_GetImplementationValue(global::LightSwitchApplication.Ticket.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Client, global::LightSwitchApplication.Client.DetailsClass>(global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties.Client, ref d._Client);
                }
                private static void _Client_SetImplementationValue(global::LightSwitchApplication.Ticket.DetailsClass d, global::LightSwitchApplication.Client v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties.Client, ref d._Client, (i, ev) => i.Client = ev, v);
                }
                private static void _Client_Refresh(global::LightSwitchApplication.Ticket.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties.Client, ref d._Client);
                }
                private static void _Client_OnValueChanged(global::LightSwitchApplication.Ticket e)
                {
                    e.Client_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, global::LightSwitchApplication.User>.Entry
                    User = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, global::LightSwitchApplication.User>.Entry(
                        "User",
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._User_Stub,
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._User_ComputeIsReadOnly,
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._User_Validate,
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._User_GetCoreImplementationValue,
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._User_GetImplementationValue,
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._User_SetImplementationValue,
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._User_Refresh,
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._User_OnValueChanged);
                private static void _User_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Ticket.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, global::LightSwitchApplication.User>.Data> c, global::LightSwitchApplication.Ticket.DetailsClass d, object sf)
                {
                    c(d, ref d._User, sf);
                }
                private static bool _User_ComputeIsReadOnly(global::LightSwitchApplication.Ticket e)
                {
                    bool result = false;
                    e.User_IsReadOnly(ref result);
                    return result;
                }
                private static void _User_Validate(global::LightSwitchApplication.Ticket e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.User_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _User_GetCoreImplementationValue(global::LightSwitchApplication.Ticket.DetailsClass d)
                {
                    return d.ImplementationEntity.User;
                }
                private static global::LightSwitchApplication.User _User_GetImplementationValue(global::LightSwitchApplication.Ticket.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.User, global::LightSwitchApplication.User.DetailsClass>(global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties.User, ref d._User);
                }
                private static void _User_SetImplementationValue(global::LightSwitchApplication.Ticket.DetailsClass d, global::LightSwitchApplication.User v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties.User, ref d._User, (i, ev) => i.User = ev, v);
                }
                private static void _User_Refresh(global::LightSwitchApplication.Ticket.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties.User, ref d._User);
                }
                private static void _User_OnValueChanged(global::LightSwitchApplication.Ticket e)
                {
                    e.User_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, global::LightSwitchApplication.Project>.Entry
                    Project = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, global::LightSwitchApplication.Project>.Entry(
                        "Project",
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._Project_Stub,
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._Project_ComputeIsReadOnly,
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._Project_Validate,
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._Project_GetCoreImplementationValue,
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._Project_GetImplementationValue,
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._Project_SetImplementationValue,
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._Project_Refresh,
                        global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties._Project_OnValueChanged);
                private static void _Project_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Ticket.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, global::LightSwitchApplication.Project>.Data> c, global::LightSwitchApplication.Ticket.DetailsClass d, object sf)
                {
                    c(d, ref d._Project, sf);
                }
                private static bool _Project_ComputeIsReadOnly(global::LightSwitchApplication.Ticket e)
                {
                    bool result = false;
                    e.Project_IsReadOnly(ref result);
                    return result;
                }
                private static void _Project_Validate(global::LightSwitchApplication.Ticket e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Project_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Project_GetCoreImplementationValue(global::LightSwitchApplication.Ticket.DetailsClass d)
                {
                    return d.ImplementationEntity.Project;
                }
                private static global::LightSwitchApplication.Project _Project_GetImplementationValue(global::LightSwitchApplication.Ticket.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass>(global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties.Project, ref d._Project);
                }
                private static void _Project_SetImplementationValue(global::LightSwitchApplication.Ticket.DetailsClass d, global::LightSwitchApplication.Project v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties.Project, ref d._Project, (i, ev) => i.Project = ev, v);
                }
                private static void _Project_Refresh(global::LightSwitchApplication.Ticket.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Ticket.DetailsClass.PropertySetProperties.Project, ref d._Project);
                }
                private static void _Project_OnValueChanged(global::LightSwitchApplication.Ticket e)
                {
                    e.Project_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, string>.Data _ShortDescription;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, string>.Data _Description;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, global::System.DateTime>.Data _DateOpened;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _DateClosed;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, global::LightSwitchApplication.Action>.Data _Actions;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, global::LightSwitchApplication.Client>.Data _Client;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, global::LightSwitchApplication.User>.Data _User;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Ticket, global::LightSwitchApplication.Ticket.DetailsClass, global::LightSwitchApplication.Project>.Data _Project;
            
        }
    
        #endregion
    }
    
    #endregion
}
